// // src/app/[locale]/layout.js
// import { NextIntlClientProvider, hasLocale } from "next-intl";
// import { notFound } from "next/navigation";
// import { routing } from "@/i18n/routing";
// import { LoadingProvider } from "@/app/_components/loading-provider/LoadingProvider";
// import { Toaster } from "@/components/ui/sonner";
// import "../globals.css";

// export function generateStaticParams() {
//   return [{ locale: "en" }, { locale: "ar" }];
// }

// export const metadata = {
//   title: "Tashtri Dashboard",
//   description: "Generated by create next app",
// };

// export default async function LocaleLayout({
//   children,
//   params: paramsPromise,
// }) {
//   const params = await paramsPromise;
//   const { locale } = params;

//   if (!hasLocale(routing.locales, locale)) {
//     notFound();
//   }

//   return (
//     <html lang={locale}>
//       <body>
//         <LoadingProvider minimumLoadingTime={3000} showProgress={true}>
//           <NextIntlClientProvider locale={locale}>
//             {children}
//             <Toaster position="top-center" />
//           </NextIntlClientProvider>
//         </LoadingProvider>
//       </body>
//     </html>
//   );
// }


// app/[locale]/layout.js
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import { LoadingProvider } from "@/app/_components/loading-provider/LoadingProvider";
import { Toaster } from "@/components/ui/sonner";
import "../globals.css";

export function generateStaticParams() {
  return [{ locale: "en" }, { locale: "ar" }];
}

export const metadata = {
  title: "Tashtri Dashboard",
  description: "Generated by create next app",
};

export default async function LocaleLayout({ children, params: paramsPromise }) {
  const params = await paramsPromise;
  const { locale } = params;

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale}>
      <body>
        <LoadingProvider minimumLoadingTime={3000} showProgress={true}>
          <NextIntlClientProvider locale={locale}>
            {children}
            <Toaster position="top-center" />
          </NextIntlClientProvider>
        </LoadingProvider>
      </body>
    </html>
  );
}